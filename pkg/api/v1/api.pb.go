// Code generated by protoc-gen-go. DO NOT EDIT.
// source: api.proto

package v1

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type SensorData struct {
	SensorId             string   `protobuf:"bytes,1,opt,name=sensorId,proto3" json:"sensorId,omitempty"`
	Value                float32  `protobuf:"fixed32,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SensorData) Reset()         { *m = SensorData{} }
func (m *SensorData) String() string { return proto.CompactTextString(m) }
func (*SensorData) ProtoMessage()    {}
func (*SensorData) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{0}
}

func (m *SensorData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SensorData.Unmarshal(m, b)
}
func (m *SensorData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SensorData.Marshal(b, m, deterministic)
}
func (m *SensorData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SensorData.Merge(m, src)
}
func (m *SensorData) XXX_Size() int {
	return xxx_messageInfo_SensorData.Size(m)
}
func (m *SensorData) XXX_DiscardUnknown() {
	xxx_messageInfo_SensorData.DiscardUnknown(m)
}

var xxx_messageInfo_SensorData proto.InternalMessageInfo

func (m *SensorData) GetSensorId() string {
	if m != nil {
		return m.SensorId
	}
	return ""
}

func (m *SensorData) GetValue() float32 {
	if m != nil {
		return m.Value
	}
	return 0
}

type DataResponse struct {
	Ok                   bool     `protobuf:"varint,1,opt,name=ok,proto3" json:"ok,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataResponse) Reset()         { *m = DataResponse{} }
func (m *DataResponse) String() string { return proto.CompactTextString(m) }
func (*DataResponse) ProtoMessage()    {}
func (*DataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_00212fb1f9d3bf1c, []int{1}
}

func (m *DataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataResponse.Unmarshal(m, b)
}
func (m *DataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataResponse.Marshal(b, m, deterministic)
}
func (m *DataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataResponse.Merge(m, src)
}
func (m *DataResponse) XXX_Size() int {
	return xxx_messageInfo_DataResponse.Size(m)
}
func (m *DataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_DataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_DataResponse proto.InternalMessageInfo

func (m *DataResponse) GetOk() bool {
	if m != nil {
		return m.Ok
	}
	return false
}

func init() {
	proto.RegisterType((*SensorData)(nil), "v1.SensorData")
	proto.RegisterType((*DataResponse)(nil), "v1.DataResponse")
}

func init() { proto.RegisterFile("api.proto", fileDescriptor_00212fb1f9d3bf1c) }

var fileDescriptor_00212fb1f9d3bf1c = []byte{
	// 179 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4c, 0x2c, 0xc8, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x2a, 0x33, 0x54, 0xb2, 0xe3, 0xe2, 0x0a, 0x4e, 0xcd,
	0x2b, 0xce, 0x2f, 0x72, 0x49, 0x2c, 0x49, 0x14, 0x92, 0xe2, 0xe2, 0x28, 0x06, 0xf3, 0x3c, 0x53,
	0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83, 0xe0, 0x7c, 0x21, 0x11, 0x2e, 0xd6, 0xb2, 0xc4, 0x9c,
	0xd2, 0x54, 0x09, 0x26, 0x05, 0x46, 0x0d, 0xa6, 0x20, 0x08, 0x47, 0x49, 0x8e, 0x8b, 0x07, 0xa4,
	0x33, 0x28, 0xb5, 0xb8, 0x20, 0x3f, 0xaf, 0x38, 0x55, 0x88, 0x8f, 0x8b, 0x29, 0x3f, 0x1b, 0xac,
	0x97, 0x23, 0x88, 0x29, 0x3f, 0xdb, 0xa8, 0x94, 0x8b, 0x23, 0x20, 0xbf, 0xb8, 0x04, 0x6c, 0xba,
	0x29, 0x17, 0x3f, 0x88, 0x1d, 0x92, 0x9a, 0x5b, 0x90, 0x5a, 0x94, 0x58, 0x52, 0x5a, 0x94, 0x2a,
	0xc4, 0xa7, 0x57, 0x66, 0xa8, 0x87, 0x70, 0x80, 0x94, 0x00, 0x88, 0x8f, 0x6c, 0xa0, 0x12, 0x83,
	0x90, 0x11, 0x17, 0x0f, 0x48, 0x9b, 0x47, 0x69, 0x6e, 0x66, 0x4a, 0x66, 0x49, 0x25, 0x31, 0x7a,
	0x92, 0xd8, 0xc0, 0x3e, 0x34, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x25, 0xfb, 0xe7, 0x0b, 0xee,
	0x00, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PostDataClient is the client API for PostData service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PostDataClient interface {
	PostTemperature(ctx context.Context, in *SensorData, opts ...grpc.CallOption) (*DataResponse, error)
	PostHumidity(ctx context.Context, in *SensorData, opts ...grpc.CallOption) (*DataResponse, error)
}

type postDataClient struct {
	cc *grpc.ClientConn
}

func NewPostDataClient(cc *grpc.ClientConn) PostDataClient {
	return &postDataClient{cc}
}

func (c *postDataClient) PostTemperature(ctx context.Context, in *SensorData, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/v1.PostData/PostTemperature", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *postDataClient) PostHumidity(ctx context.Context, in *SensorData, opts ...grpc.CallOption) (*DataResponse, error) {
	out := new(DataResponse)
	err := c.cc.Invoke(ctx, "/v1.PostData/PostHumidity", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PostDataServer is the server API for PostData service.
type PostDataServer interface {
	PostTemperature(context.Context, *SensorData) (*DataResponse, error)
	PostHumidity(context.Context, *SensorData) (*DataResponse, error)
}

func RegisterPostDataServer(s *grpc.Server, srv PostDataServer) {
	s.RegisterService(&_PostData_serviceDesc, srv)
}

func _PostData_PostTemperature_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SensorData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostDataServer).PostTemperature(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PostData/PostTemperature",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostDataServer).PostTemperature(ctx, req.(*SensorData))
	}
	return interceptor(ctx, in, info, handler)
}

func _PostData_PostHumidity_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SensorData)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PostDataServer).PostHumidity(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/v1.PostData/PostHumidity",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PostDataServer).PostHumidity(ctx, req.(*SensorData))
	}
	return interceptor(ctx, in, info, handler)
}

var _PostData_serviceDesc = grpc.ServiceDesc{
	ServiceName: "v1.PostData",
	HandlerType: (*PostDataServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PostTemperature",
			Handler:    _PostData_PostTemperature_Handler,
		},
		{
			MethodName: "PostHumidity",
			Handler:    _PostData_PostHumidity_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "api.proto",
}
